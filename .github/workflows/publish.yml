name: SDK publish

on:
  pull_request:
    types: [closed]
    branches:
      - 'master'
      - 'support/*'
 
jobs:
  lint:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      - name: lint check
        run: ./gradlew --no-daemon check

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      - name: unit tests
        run: ./gradlew --no-daemon testDebugUnitTest

  build:
    needs: [lint, unit-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - name: build project
        run: ./gradlew --no-daemon assembleDebug

  set-tag:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Extract SDK version
        run: |
            SDK_VERSION=$(grep '^SDK_VERSION_NAME=' gradle.properties | cut -d '=' -f2)
            echo "SDK_VERSION=$SDK_VERSION" >> $GITHUB_ENV
            echo "Extracted SDK version: $SDK_VERSION"
      - name: Create tag
        run: |
            git tag ${{ env.SDK_VERSION }}
            git push origin ${{ env.SDK_VERSION }}

  publish:
    needs: [set-tag]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - name: Prepare to publish
        run: |
          echo '${{secrets.GPGKEYCONTENTS}}' | base64 -d > /tmp/publish_key.gpg
          gpg --quiet --batch --yes --decrypt --passphrase="${{secrets.SECRETPASSPHRASE}}" \
          --output /tmp/secret.gpg /tmp/publish_key.gpg
          echo -e "\nsigning.password=$signingpassword" >> gradle.properties
          echo -e "\nsigning.keyId=$signingkeyId" >> gradle.properties
          echo -e "\nsigning.secretKeyRingFile=/tmp/secret.gpg" >> gradle.properties
        env:
          signingpassword: ${{secrets.signingpassword}}
          signingkeyId: ${{secrets.signingkeyId}}
          SECRETPASSPHRASE: ${{secrets.SECRETPASSPHRASE}}
          GPGKEYCONTENTS: ${{secrets.GPGKEYCONTENTS}}
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      - name: Publish to Sonatype
        run: ./gradlew --no-daemon publish -PsonatypeUsername=${{secrets.OSSRHTOKEN}} -PsonatypePassword=${{secrets.OSSRHTOKENPASSWORD}}

  release-github:
    needs: [publish]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Github Release generation
        run: ./.github/git-release-ci.sh
        env:
          GH_TOKEN: ${{ github.token }}

  merge:
    needs: [publish]
    if: startsWith(github.head_ref, 'release/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout develop branch
        uses: actions/checkout@v4
        with:
          ref: develop
      - name: Create Pull Request
        run: gh pr create --base develop --head master --title "Merge 'master' into 'develop' after release" --body "Automated Pull Request to merge 'master' into 'develop' after release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Merge Pull Request
        run: |
          pr_number=$(gh pr list --base develop --head master --json number --jq '.[0].number')
          gh pr merge $pr_number --merge
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
